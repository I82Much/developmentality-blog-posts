I recently took a course on [Human Computer Interaction][] on Coursera, taught by Scott Klemer from Stanford University.  According to its [About][about] page, Coursera is a 

> social entrepreneurship company that partners with the top universities in the world to offer courses online for anyone to take, for free. We envision a future where the top universities are educating not only thousands of students, but millions. Our technology enables the best professors to teach tens or hundreds of thousands of students.

After having completed this course, I feel that Coursera provides an amazing service.  It's not perfect, but it is far superior to any online courses I've taken so far.

# Motivation
I have been fascinated with design and making things 'user friendly' ever since reading Donald Norman's [The Design of Everyday Things][] in college.  This book details why certain designs fail while others are intuitive and obvious.  One of the things that stuck with me is the concept of affordances - buttons 'afford' being pressed, dials 'afford' being turned, handles 'afford' being pulled.  To this day, it is one of my biggest pet peeves to find doors that open the wrong way.  During a recent trip to Paris, I took pictures of some of the design failures I saw, including this particularly nasty door in the hotel.

![Push](https://lh5.googleusercontent.com/-vZKEU7Nxe6c/UBDEWqoKLkI/AAAAAAAACbE/CoVdbtC5Pps/s640/small_1.jpg "Translation: Push")
![Pull](https://lh5.googleusercontent.com/-Bz3jZmJLViI/UBDEWkyWrLI/AAAAAAAACbA/erTPLwKf1OI/s640/small_2.jpg "Translation: Pull")

It's the exact same handle on both sides of the door, but it is designed to swing in only one direction.  We walked through that door at least 10 times but each and every time we had to *think* about how to open it; we had to push an interface that was clearly designed to be pulled.

This is a somewhat trivial example, but design can have incredible safety implications as well.  A recent article claims that poor design contributed to the 2009 Air France Flight 447 crash:

>In the next 40 seconds AF447 fell 3,000 feet, losing more and more speed as the angle of attack increased to 40 degrees. The wings were now like bulldozer blades against the sky. Bonin failed to grasp this fact, and though angle of attack readings are sent to onboard computers, <strong>there are no displays in modern jets to convey this critical information to the crews. One of the provisional recommendations of the BEA inquiry has been to challenge this absence</strong>.

(Emphasis mine)

When I heard from a coworker that Coursera was offering a course on Human Computer Interaction, I knew I had to take it.

# Structure
The course was slated to last 5 weeks though it actually took 6 due to an extension in one of the assignments.  Some of the topics included needfinding (determining what actual people need in an interface and how they make do with the status quo), paper prototyping techniques, storyboarding techniques, heuristic evaluation, lab usability studies.  

The course had four main components each week:

* lectures
* quizzes
* projects
* peer review


The lectures were presented as a series of videos broken into approximately ten minute chunks.  Each video had the same slides that the professor presented as downloadable attachments.  Most of the videos also had subtitles for a few different languages; I heard complaints on the forums that some of the later videos were without subtitles but as I am a native English speaker, it did not affect me.  

There were two nice touches I liked in the lectures: embedded quizzes and video playback speed.  In almost every video, there would be a break in the video where an interactive quiz was presented based off of what Professor Klemer had just presented.  It's a nice pedagogical trick to make sure you're paying attention and understanding the material.  I found the default pace of the lectures a little slow, but the embedded video player allowed me to speed up the videos.  I found the lectures were comfortable to watch at 1.75x speed.

In addition to the mini quizzes embedded in the videos, there were multiple choice quizzes each week based off of the lectures.  These quizzes gave instant feedback after submission, which I appreciated.  Students could retake the quizzes a few times until they pass; in general I found that the quizzes were easy if you paid attention to the video lectures.

The course hammered home the point that designers and implementers are the worst people to judge their own work.  They have too much knowledge, and their mental model is nothing like that of the 'average' user.  Furthermore, they are too close to the system to provide an objective evaluation - if they labored weeks on a particular feature, they're going to inflate its importance, even if the design as a whole would improve without it.  The meat of the course, namely the assignments and peer evaluations, were imbued with this idea.  We were tasked with building a software prototype and enlisting the help of users to test it and improve its design.

At the start of the course, we were presented with three options for themes our design projects could take on.  From the [design briefs][] page:

* Change - "Use the power of new technology to create an application or service that facilitates personal or social behavior change"
* Glance - "Find people and design a personal dashboard tailored to their needs"
* Time - "Redesign the way we experience or interact with time"

I chose the Glance design brief.  My inspiration was a hideously complicated board game named [Twilight Imperium][].  It's a fun turn based conquer-the-galaxy board game, but it has some serious usability issues.  

![index](https://lh5.googleusercontent.com/-pJndi90Zx_Q/UBDPDgvOENI/AAAAAAAACbg/4tDoQxAmSw4/s630/Index.jpg "The index of the game")

It takes an incredibly long time to learn the rules, and an even longer time to play.  (Our first game took, literally, 16 hours over the course of a few days).  The fastest we've ever completed a game is 5 hours.  Two aspects of the game struck me as particularly frustrating - making sense of the technology tree (there are 24 technologies grouped into four categories, spread across two massive pages in the instruction manual), and combat (each of the ~6 ship types has a different base attack rate, which can be modified by your race, action cards, and political cards in effect).  In every game I've played, choosing technologies to buy and the combat bring the game to a screeching halt.  I decided that my project would be to build an application of some sort to help make one of these aspects more intuitive and fun.

I designed two storyboards, one for the combat app and one for the tech tree app idea, in order to solidify who the app was for (board gamers who play TI), where it would be used (wherever they play), and the problems it solved (takes too long to pick technologies and/or fight, too much has to be kept in players' heads)

![storyboard](https://coursera-uploads.s3.amazonaws.com/user-44f17e4c52acc354bba9e768/18/asst-2/18-4fd8212d843ea9.39117312.jpg "One page of my storyboard describing the tech tree problem")

Next I decided to focus on the technology tree idea and came up with two mockups of divergent designs of this application using the wireframing software [Balsamiq][]. (Longtime readers of this blog might remember that I used Balsamiq to make the illustrations for my post explaining [how ListView works in Android][listview]).  I decided that I wanted to drastically simplify the tree structure as laid out in the instruction manual and instead only display the prerequisites when necessary.  (Technology X cannot be purchased until you purchase A AND B or C...).

One of my designs was inspired by the slick UI of Diablo 3 for crafting items:

![Diablo 3 crafting](https://lh5.googleusercontent.com/-dRS4wZ9gENk/UBDTRZs3L4I/AAAAAAAACb0/L9O9xDGPRT0/s512/Picture%2520193.png "Screenshot from Diablo 3 cropped from http://www.diablo3professions.com/wp-content/uploads/2011/08/diablo_3_apprentice_blacksmith_crafting_legs.jpg").

Here's the Balsamiq wireframe for that design:
![Linear prototype](https://lh5.googleusercontent.com/-d16TgFIItvo/UBDTReUvj3I/AAAAAAAACb8/aSf55aMz2M8/s512/Picture%2520192.png "Screenshot of linear design")
[Interactive PDF](https://coursera-uploads.s3.amazonaws.com/user-44f17e4c52acc354bba9e768/18/asst-2/18-4fd8220bb6b649.94590312.pdf)

The second design I created was a grid layout:
![Grid prototype](https://lh5.googleusercontent.com/-rZyV2HtUP28/UBDTdTtjpjI/AAAAAAAACcI/mBu7NcRPWHc/s512/Picture%2520194.png "Screenshot of grid design")
[Interactive PDF](https://coursera-uploads.s3.amazonaws.com/user-44f17e4c52acc354bba9e768/18/asst-2/18-4fd821dba6d482.12381697.pdf)





[p2pu]:http://developmentality.wordpress.com/2011/01/13/p2pu-world-of-webcraft/
[hci]:https://www.coursera.org/course/hci
[about]:https://www.coursera.org/about
[The Design Of Everyday Things]:http://www.amazon.com/Design-Everyday-Things-Donald-Norman/dp/0385267746
[air crash]:http://www.telegraph.co.uk/technology/9231855/Air-France-Flight-447-Damn-it-were-going-to-crash.html
[design briefs]:https://class.coursera.org/hci/wiki/view?page=DesignBriefs
[Twilight Imperium]:http://boardgamegeek.com/boardgame/12493/twilight-imperium-third-edition
[final mock]:http://dl.dropbox.com/u/14587208/TITechTreev2/h5bp-html5-boilerplate/techtree.html
[listview]:http://developmentality.wordpress.com/2010/11/05/of-rubber-stamps-and-checkboxes-why-your-listview-is-broken/
